{{ ansible_managed | comment }}

[Unit]
Description=prometheus-kafka-adapter Docker Container
After=network-online.target
After=docker.service
Requires=docker.service

[Service]
TimeoutStartSec=0
ExecStartPre=-/usr/bin/docker rm -f {{ prometheus_kafka_adapter_container_name }}
ExecStartPre=/usr/bin/docker pull {{prometheus_kafka_adapter_docker_registry}}/{{ prometheus_kafka_adapter_docker_image }}
ExecStart=/usr/bin/docker run \
    --name {{ prometheus_kafka_adapter_container_name }} \
{% if prometheus_kafka_adapter_docker_network != "" %}
    --network {{ prometheus_kafka_adapter_docker_network }} \
{% endif %}
{% if prometheus_kafka_adapter_listen_port != "" %}
    -p {{ prometheus_kafka_adapter_listen_port }}:{{ _listen_port_docker }} \
{% endif %}
    -e KAFKA_BROKER_LIST=${KAFKA_BROKER_LIST} \
    -e KAFKA_TOPIC=${KAFKA_TOPIC} \
    -e KAFKA_COMPRESSION=${KAFKA_COMPRESSION} \
    -e KAFKA_BATCH_NUM_MESSAGES=${KAFKA_BATCH_NUM_MESSAGES} \
    -e SERIALIZATION_FORMAT=${SERIALIZATION_FORMAT} \
    -e PORT=${PORT} \
    -e LOG_LEVEL=${LOG_LEVEL} \
    -e KAFKA_SSL_CLIENT_CERT_FILE=${KAFKA_SSL_CLIENT_CERT_FILE} \
    -e KAFKA_SSL_CLIENT_KEY_FILE=${KAFKA_SSL_CLIENT_KEY_FILE} \
    -e KAFKA_SSL_CLIENT_KEY_PASS=${KAFKA_SSL_CLIENT_KEY_PASS} \
    -e KAFKA_SSL_CA_CERT_FILE=${KAFKA_SSL_CA_CERT_FILE} \
    -e GIN_MODE=${GIN_MODE} \
    -v {{prometheus_kafka_adapter_config_dir}}:/etc/prometheus-kafka-adapter:ro \
    {{prometheus_kafka_adapter_docker_registry}}/{{ prometheus_kafka_adapter_docker_image }}

[Install]
WantedBy=multi-user.target
